import { Configuration, RuleSetRule, WebpackPluginInstance } from "webpack";
export declare const loader: (arg: RuleSetRule) => (arg: Configuration) => Configuration;
export declare const unshiftLoader: (arg: RuleSetRule) => (arg: Configuration) => Configuration;
export declare const plugin: (arg: WebpackPluginInstance) => (arg: Configuration) => Configuration;
export declare function markRemovable(r: RuleSetRule): RuleSetRule;
export type ConfigurationContext = {
    hasAppDir: boolean;
    isAppDir?: boolean;
    supportedBrowsers: string[] | undefined;
    rootDirectory: string;
    customAppFile: RegExp | undefined;
    isDevelopment: boolean;
    isProduction: boolean;
    isServer: boolean;
    isClient: boolean;
    isEdgeRuntime: boolean;
    targetWeb: boolean;
    assetPrefix: string;
    sassOptions: any;
    productionBrowserSourceMaps: boolean;
    serverSourceMaps: boolean;
    transpilePackages: any;
    future: any;
    experimental: any;
};
export type ConfigurationFn = (a: Configuration) => Configuration;
export declare const pipe: <R>(...fns: Array<(a: R) => R>) => (param: R) => R;
export declare function getHashForFile(filePath: string): string;
export declare const regexCssScopes: RegExp;
export declare const regexSassScopes: RegExp;
